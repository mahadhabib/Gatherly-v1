"use client"

import { useState } from "react"
import { Download, Copy, QrCode } from "lucide-react"
import { Button } from "@/components/ui/button"
import { useToast } from "@/hooks/use-toast"
import { jsPDF } from "jspdf"

export default function TicketGenerator({ event, attendee }) {
  const { toast } = useToast()
  const [isGenerating, setIsGenerating] = useState(false)

  // Generate a unique ticket ID
  const ticketId = `GTHR-${event?.id || "EVENT"}-${attendee?.id || "USER"}-${Date.now().toString(36)}`

  const generateQRCode = () => {
    // In a real app, you would generate a QR code with a library
    // For now, we'll return a placeholder
    return "/placeholder.svg?height=150&width=150"
  }

  const generatePDF = async () => {
    setIsGenerating(true)

    try {
      // Create a new PDF document
      const doc = new jsPDF({
        orientation: "portrait",
        unit: "mm",
        format: "a4",
      })

      // Set background color
      doc.setFillColor(240, 240, 255)
      doc.rect(0, 0, 210, 297, "F")

      // Add event title
      doc.setFontSize(24)
      doc.setTextColor(40, 40, 40)
      doc.text(event?.title || "Event Title", 105, 30, { align: "center" })

      // Add ticket border
      doc.setDrawColor(100, 100, 240)
      doc.setLineWidth(0.5)
      doc.roundedRect(20, 40, 170, 200, 5, 5, "S")

      // Add ticket details
      doc.setFontSize(12)
      doc.setTextColor(60, 60, 60)

      // Attendee info
      doc.text(`Attendee: ${attendee?.name || "Guest"}`, 30, 60)
      doc.text(`Email: ${attendee?.email || "guest@example.com"}`, 30, 70)

      // Event info
      doc.text(`Date: ${event?.date ? new Date(event.date).toLocaleDateString() : "TBD"}`, 30, 90)
      doc.text(`Time: ${event?.date ? new Date(event.date).toLocaleTimeString() : "TBD"}`, 30, 100)
      doc.text(`Location: ${event?.location || "TBD"}`, 30, 110)

      // Ticket ID
      doc.setFontSize(10)
      doc.text(`Ticket ID: ${ticketId}`, 30, 130)

      // Add QR code placeholder
      // In a real app, you would generate and add an actual QR code
      doc.addImage("/placeholder.svg?height=150&width=150", "SVG", 75, 140, 60, 60)

      // Add footer
      doc.setFontSize(8)
      doc.setTextColor(100, 100, 100)
      doc.text("Generated by Gatherly - Event Planning & RSVP System", 105, 280, { align: "center" })

      // Save the PDF
      doc.save(`ticket-${event?.id || "event"}-${attendee?.id || "attendee"}.pdf`)

      toast({
        title: "Ticket Generated",
        description: "Your ticket has been downloaded as a PDF.",
      })
    } catch (error) {
      console.error("Error generating PDF:", error)
      toast({
        title: "Error",
        description: "There was an error generating your ticket. Please try again.",
        variant: "destructive",
      })
    } finally {
      setIsGenerating(false)
    }
  }

  const copyTicketId = () => {
    navigator.clipboard.writeText(ticketId)
    toast({
      title: "Copied",
      description: "Ticket ID copied to clipboard",
    })
  }

  return (
    <div className="space-y-6">
      <div className="rounded-lg border p-4 bg-muted/20">
        <div className="flex flex-col items-center text-center space-y-4">
          <QrCode className="h-16 w-16 text-primary" />
          <div>
            <h3 className="text-lg font-medium">Your Ticket</h3>
            <p className="text-sm text-muted-foreground">
              Generate and download your ticket for {event?.title || "this event"}
            </p>
          </div>

          <div className="flex flex-col sm:flex-row gap-2 w-full">
            <Button className="flex-1" onClick={generatePDF} disabled={isGenerating}>
              <Download className="mr-2 h-4 w-4" />
              {isGenerating ? "Generating..." : "Download Ticket"}
            </Button>
            <Button variant="outline" className="flex-1" onClick={copyTicketId}>
              <Copy className="mr-2 h-4 w-4" />
              Copy Ticket ID
            </Button>
          </div>
        </div>
      </div>

      <div className="space-y-2">
        <h4 className="text-sm font-medium">Ticket Information</h4>
        <div className="rounded-lg border overflow-hidden">
          <div className="grid grid-cols-2 gap-2 p-3 text-sm">
            <div className="text-muted-foreground">Ticket ID</div>
            <div className="font-mono">{ticketId}</div>
          </div>
          <div className="grid grid-cols-2 gap-2 p-3 text-sm border-t">
            <div className="text-muted-foreground">Event</div>
            <div>{event?.title || "Event Title"}</div>
          </div>
          <div className="grid grid-cols-2 gap-2 p-3 text-sm border-t">
            <div className="text-muted-foreground">Attendee</div>
            <div>{attendee?.name || "Guest"}</div>
          </div>
          <div className="grid grid-cols-2 gap-2 p-3 text-sm border-t">
            <div className="text-muted-foreground">Status</div>
            <div className="text-green-600 dark:text-green-400">Confirmed</div>
          </div>
        </div>
      </div>

      <div className="text-sm text-muted-foreground">
        <p>Please bring this ticket (printed or digital) to the event. The QR code will be scanned at entry.</p>
      </div>
    </div>
  )
}
